<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title></title>
<meta name="Generator" content="Cocoa HTML Writer">
<meta name="CocoaVersion" content="824.41">
<style type="text/css">
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 18.0px Helvetica; color: #000000}
p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000; min-height: 14.0px}
p.p3 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000}
p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 13.0px Helvetica; color: #000000}
p.p5 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #000000; min-height: 12.0px}
p.p6 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #000000}
p.p7 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; min-height: 14.0px}
p.p8 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica}
p.p9 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; min-height: 12.0px}
p.p10 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco}
span.s1 {font: 14.0px Helvetica}
span.s2 {color: #0000bf}
span.s3 {color: #606060}
span.s4 {color: #007300}
span.s5 {font: 12.0px Helvetica; color: #000000}
span.Apple-tab-span {white-space:pre}
</style>
</head>
<body>
<p class="p1"><b>TapTimer</b></p>
<p class="p2"><br></p>
<p class="p3"><b>superclass: Object</b></p>
<p class="p2"><br></p>
<p class="p3">Tap on a button, a keyboard, a MIDI device, an HID, or whatever to get timings.<span class="Apple-converted-space">  </span>Tap multiple times to average</p>
<p class="p3">out the timing and correct for error.</p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p3">This class requires the BBCut library (you can modify this by changing the ExternalClock to a<span class="Apple-converted-space"> </span></p>
<p class="p3">TempoClock in the class definition if you don't want / have BBCut)</p>
<p class="p2"><br></p>
<p class="p4"><b><i>Class Methods</i></b></p>
<p class="p2"><br></p>
<p class="p2"><br></p>
<p class="p3"><b><span class="Apple-tab-span">	</span>*new(max, phrase_len, beats_per_phrase, error_margin)</b></p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><b>max</b> is the maximum loop time in seconds, <b>phrase_len</b> is the current measure length,</p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><b>beats_per_phrase</b> is how the measures should be subdivided, <b>error_margin</b> controls</p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>how far off a tap is from being the next beat in a series, vs starting a new series of taps</p>
<p class="p2"><br></p>
<p class="p3"><span class="Apple-tab-span">	</span><b>*mIN_LEN()</b></p>
<p class="p3"><b><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></b>Returns the minimum time for a measure in seconds.<span class="Apple-converted-space">  </span>This cannot be smaller than the frame size.</p>
<p class="p2"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p3"><span class="Apple-tab-span">	</span><b>*mIN_LEN_(time)</b></p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>Set the minimum time for a measure in seconds.<span class="Apple-converted-space">  </span>This cannot be smaller than the frame size.<span class="Apple-converted-space"> </span></p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>Note: there is no sanity checking for this.</p>
<p class="p2"><span class="Apple-converted-space"> </span></p>
<p class="p2"><br></p>
<p class="p4"><b><i>Instance Methods</i></b></p>
<p class="p2"><br></p>
<p class="p3"><span class="Apple-tab-span">	</span><b>start_tap(time)</b></p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>An introductory tap, that doesn't count if the system is already running.<span class="Apple-converted-space">  </span>This might be used</p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>if the user started a process without first starting the timer.<span class="Apple-converted-space">  </span>If <b>time</b> is nil, Main.elapsed time</p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>is used.</p>
<p class="p2"><br></p>
<p class="p3"><span class="Apple-tab-span">	</span><b>tap(time)</b></p>
<p class="p3"><b><span class="Apple-tab-span">	</span></b><span class="Apple-tab-span">	</span>A tap is entered into the timer.<span class="Apple-converted-space">  </span>If <b>time</b> is nil, Main.elapsed time is used.<span class="Apple-converted-space">  </span>A user would typically<span class="Apple-converted-space"> </span></p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>tap their keyboard or object several times and this averages between the times to compensate</p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>for flux between taps and operating system timing.</p>
<p class="p2"><br></p>
<p class="p2"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p3"><b><span class="Apple-tab-span">	</span>double()</b></p>
<p class="p3"><b><span class="Apple-tab-span">	</span></b><span class="Apple-tab-span">	</span>Make measure last for twice as long</p>
<p class="p2"><b><span class="Apple-tab-span">	</span></b></p>
<p class="p3"><b><span class="Apple-tab-span">	</span>half()</b></p>
<p class="p3"><b><span class="Apple-tab-span">	</span></b><span class="Apple-tab-span">	</span>Divide the measure length by half</p>
<p class="p2"><b><span class="Apple-tab-span">	</span></b></p>
<p class="p3"><b><span class="Apple-tab-span">	</span>quad()</b></p>
<p class="p3"><b><span class="Apple-tab-span">	</span></b><span class="Apple-tab-span">	</span>Make the measure 4 times as long</p>
<p class="p2"><br></p>
<p class="p3"><span class="s1"><span class="Apple-tab-span">	</span></span><b>eight()</b></p>
<p class="p3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>Make the measure eight times as long</p>
<p class="p2"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p2"><br></p>
<p class="p4"><b><i>Examples</i></b></p>
<p class="p2"><br></p>
<p class="p3"><span class="Apple-tab-span">	</span>To do keyboard triggering, you use the Document class. For example:</p>
<p class="p5"><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span>(</p>
<p class="p5"><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>t = <span class="s2">TapTimer</span>.new(32);</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>d = <span class="s2">Document</span>.new;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>d.keyDownAction_({<span class="s2">arg</span> thisDoc, key;</p>
<p class="p6"><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><span class="s2">var</span> time;</p>
<p class="p6"><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>if((key == $t), {</p>
<p class="p6"><span class="Apple-converted-space">     <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>time = <span class="s2">Main</span>.elapsedTime;</p>
<p class="p6"><span class="Apple-converted-space">     <span class="Apple-tab-span">	</span> <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>t.tap(time);</p>
<p class="p6"><span class="Apple-converted-space">     <span class="Apple-tab-span">	</span> <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>(<span class="s3">"measure length is"</span> + t.phrase_len).postln;</p>
<p class="p6"><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>});</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>});</p>
<p class="p6"><span class="Apple-tab-span">	</span> )</p>
<p class="p5"><span class="Apple-tab-span">	</span></p>
<p class="p3"><span class="Apple-tab-span">	</span>Tap 't' in the new Document window to set the clock</p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p3"><span class="Apple-tab-span">	</span>Then, when you want something to happen according to the clock, you wrap it<span class="Apple-converted-space"> </span></p>
<p class="p3"><span class="Apple-tab-span">	</span>in a routine.<span class="Apple-converted-space"> </span></p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span>(</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>d.keyDownAction_({<span class="s2">arg</span> thisDoc, key;</p>
<p class="p6"><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><span class="s2">var</span> time;</p>
<p class="p6"><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>if((key == $t), {</p>
<p class="p6"><span class="Apple-converted-space">     <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>time = <span class="s2">Main</span>.elapsedTime;</p>
<p class="p6"><span class="Apple-converted-space">     <span class="Apple-tab-span">	</span> <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>t.tap(time);</p>
<p class="p6"><span class="Apple-converted-space">     <span class="Apple-tab-span">	</span> <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>(<span class="s3">"measure length is"</span> + t.phrase_len).postln;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>} , { if((key == $a) , {</p>
<p class="p6"><span class="Apple-converted-space">   <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><span class="s2">Routine</span>.new({<span class="s2">Synth</span>(<span class="s4">\default</span>).play; }).play(t.tempoclock);</p>
<p class="p6"><span class="Apple-converted-space">   <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><span class="s3">"play synth"</span>.postln;</p>
<p class="p6"><span class="Apple-converted-space">    <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>}, { if ((key == $b), {</p>
<p class="p6"><span class="Apple-converted-space">   <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><span class="s2">Routine</span>.new({<span class="s2">Pbind</span>(\dur, Pfunc({t.phrase_len})).play}).play(t.tempoclock);</p>
<p class="p6"><span class="Apple-converted-space">   <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><span class="s3">"play pbind"</span>.postln;</p>
<p class="p6"><span class="Apple-converted-space">   <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>}) }) });</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>});</p>
<p class="p6"><span class="Apple-tab-span">	</span>)</p>
<p class="p7"><br></p>
<p class="p8"><span class="Apple-tab-span">	</span>Type 'a' in the Document window to start a synth, 'b' to start a pbind or</p>
<p class="p8"><span class="Apple-tab-span">	</span>'t' to set the timer.</p>
<p class="p9"><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="Apple-tab-span">	</span></p>
<p class="p3"><span class="Apple-tab-span">	</span>Beat tracking with BBCut</p>
<p class="p5"><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span>(</p>
<p class="p9"><span class="Apple-tab-span">	</span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g = true;</p>
<p class="p9"><span class="Apple-tab-span">	</span></p>
<p class="p10"><span class="Apple-tab-span">	</span> <span class="Apple-tab-span">	</span><span class="s2">SynthDef</span> (<span class="s4">\TapTimer-help</span>, { <span class="s2">arg</span> vol=1.0, beepvol=1.0, lock=0;</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> trackb,trackh,trackq,tempo;</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> source;</p>
<p class="p9"><br></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>source= <span class="s2">AudioIn</span>.ar(1); <span class="Apple-converted-space"> </span></p>
<p class="p9"><span class="Apple-tab-span">	</span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>#trackb,trackh,trackq,tempo=<span class="s2">AutoTrack</span>.kr(source, lock);</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">SendTrig</span>.kr(trackb, 0, 0.9);</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>}).play;</p>
<p class="p9"><br></p>
<p class="p9"><br></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">OSCresponder</span>(s.addr,<span class="s4">'/tr'</span>,{ <span class="s2">arg</span> time,responder,msg;</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g.if ({</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>[time,responder,msg].postln;</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>t.tap(time);</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>})</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>}).add;</p>
<p class="p10"><span class="Apple-tab-span">	</span>)</p>
<p class="p9"><span class="Apple-tab-span">	</span></p>
<p class="p3"><span class="Apple-tab-span">	</span>Hit 'b' in the Document window to have a Pbind correspond to beat tracking input.</p>
<p class="p3"><span class="Apple-tab-span">	</span>Use headphones to avoid the beat tracker hearing the Pbind</p>
<p class="p2"><br></p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p3"><span class="Apple-tab-span">	</span>Tell the OSC responder to ignore beattracking input:</p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p10"><span class="s5"><span class="Apple-tab-span">	</span></span><span class="Apple-tab-span">	</span>g = false</p>
</body>
</html>
